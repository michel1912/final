project: example  
response: eSuccess  
response_rule: skillSuccess and goal_reached  
response: eFailed  
response_rule: True  
module_activation: ros_service
imports: from: geometry_msgs.msg import: Point
imports: from: rclpy.executors import: MultiThreadedExecutor
imports: from: rclpy.node import: Node
imports: from: nav2_msgs.action import: NavigateToPose
imports: from: interfaces_robot.srv import: NavigateToCoordinates
path: /navigate_to_coordinates
srv: NavigateToCoordinates
parameter: pose  
code:
  Point(x=nav_to_x, y=nav_to_y, z=nav_to_z)  
local_variable: skillSuccess 
imports: from: std_msgs.msg import: Bool
type: bool
code: 
  skillSuccess = __input.success  
local_variable: goal_reached  
topic: /rosout  
message_type: Log  
imports: from: rcl_interfaces.msg import: Log
type: bool 
initial_value: False  
code:
if goal_reached == True:
    return True
else:
    return __input.msg.find('Goal reached') > -1 
local_variable: nav_to_x  
action_parameter: x  
local_variable: nav_to_y  
action_parameter: y  
local_variable: nav_to_z  
action_parameter: z